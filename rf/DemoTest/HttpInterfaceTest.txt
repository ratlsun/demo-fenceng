*** Settings ***
Library           RequestsLibrary
Library           OperatingSystem
Library           Collections

*** Test Cases ***
RestfulProductApiTest
    Comment    ${proxies}    create dictionary    http    http://localhost:3333
    Create Session    httpserver    http://localhost:8000
    获取产品列表    httpserver
    ${pid}    新建一个产品    httpserver    iphone5s    55
    Comment    ${pid}    使用文件里的数据新建一个产品    httpserver    ${CURDIR}\\product.data
    更新产品信息    httpserver    ${pid}    iphone5c    66
    删除一个产品    httpserver    ${pid}
    获取一个已经被删除的产品    httpserver    ${pid}

CookieFetchAndSendTest
    ########    Visit admin page before login(without cookies)    ########
    Create Session    session1    http://localhost:8000
    ${resp}=    get    session1    /admin
    log    ${resp.content}
    Should Be Equal As Strings    ${resp.status_code}    403
    ################    Login(fetch cookies)    ########################
    ${resp}=    get    session1    /login
    log    ${resp.cookies['username']} login successful
    ########    Visit admin page after login(with cookies)    ########
    Create Session    session2    http://localhost:8000    cookies=${resp.cookies}
    ${resp}=    get    session2    /admin
    log    ${resp.content}
    Should Be Equal As Strings    ${resp.status_code}    200

Post With Unicode Data
    [Tags]    post
    Create Session    httpbin    http://httpbin.org
    ${data}=    Create Dictionary    name    度假村
    ${headers}=    Create Dictionary    Content-Type    application/x-www-form-urlencoded
    ${resp}=    Post    httpbin    /post    data=${data}    headers=${headers}
    ${j}    to json    ${resp.content}
    log    ${j['origin']}
    Dictionary Should Contain Value    ${resp.json()['form']}    度假村

*** Keywords ***
获取产品列表
    [Arguments]    ${sess_id}
    [Documentation]    调用 /api/products GET 接口获取产品列表，记录所有产品的json list
    ${resp}=    get    ${sess_id}    /api/products
    Should Be Equal As Strings    ${resp.status_code}    200
    ${jsondata}=    To JSON    ${resp.content}
    log    Products list before create: ${jsondata['AllProducts']}

新建一个产品
    [Arguments]    ${sess_id}    ${产品名称}    ${产品数量}
    [Documentation]    调用 /api/products POST 新建一个产品，记录返回的被创建产品json，返回产品id
    ${resp}=    post    ${sess_id}    /api/products    {"ProductName": "${产品名称}","Quantity": ${产品数量} \ \ }
    Should Be Equal As Strings    ${resp.status_code}    201
    ${jsondata}=    To JSON    ${resp.content}
    log    Created product: ${jsondata['Product']}
    ${pid}    set variable    ${jsondata['Product']['Id']}
    [Return]    ${pid}

更新产品信息
    [Arguments]    ${sess_id}    ${产品id}    ${产品名称}    ${产品数量}
    [Documentation]    调用 /api/products/<pid> \ PUT 更新一个产品，记录返回的更新后的产品json
    ${resp}=    put    ${sess_id}    /api/products/${产品id}    {"ProductName": "${产品名称}","Quantity": ${产品数量} \ \ }
    Should Be Equal As Strings    ${resp.status_code}    200
    ${jsondata}=    To JSON    ${resp.content}
    log    Updated No.${pid} product quantity: ${jsondata['Product']}

删除一个产品
    [Arguments]    ${sess_id}    ${产品id}
    [Documentation]    调用 /api/products/<pid> \ DELETE 删除一个产品，记录返回的是否成功删除的结果
    ${resp}=    delete    ${sess_id}    /api/products/${产品id}
    Should Be Equal As Strings    ${resp.status_code}    200
    ${jsondata}=    To JSON    ${resp.content}
    log    Deleted No.${pid} \ product: ${jsondata['result']}

获取一个已经被删除的产品
    [Arguments]    ${sess_id}    ${产品id}
    [Documentation]    调用 /api/products/<pid> \ GET 或取一个产品，记录返回结果，应该返回404错误
    ${resp}=    get    ${sess_id}    /api/products/${产品id}
    Should Be Equal As Strings    ${resp.status_code}    404
    ${jsondata}=    To JSON    ${resp.content}
    log    Get No.${pid} product: ${jsondata['result']}

使用文件里的数据新建一个产品
    [Arguments]    ${sess_id}    ${文件路径}
    [Documentation]    用指定文件路径里的json数据调用 /api/products POST 新建一个产品，记录返回的被创建产品json，返回产品id
    ${product_content}=    get file    ${文件路径}
    ${resp}=    post    ${sess_id}    /api/products    ${product_content}
    Should Be Equal As Strings    ${resp.status_code}    201
    ${jsondata}=    To JSON    ${resp.content}
    log    Created product: ${jsondata['Product']}
    ${pid}    set variable    ${jsondata['Product']['Id']}
    [Return]    ${pid}
